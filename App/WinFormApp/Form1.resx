<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEwAAAAeCAYAAACG0fjXAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAN0SURBVGhD7djNS1RRHMZx/xehl00LwZVUEtQiCEQiKigi
        qI0RQRTYQsVwZY1ZQVZogRUORWLlIkrUJgrBwkqiLHBqqNAhs1ASW5x6Tud3OXPnvN474yT2hcN9Gxjn
        wzl37ljG/ufVigM78u5cMKK0omeYjCcPU8sSrG7TKrFXnEx4VrDOz/0sNfuSff81x3qmBlhLupsP7E8v
        fhOvWvpc0Y7ef8+S49MsPfuT79f0vGL7+96wzudfxCv8soIRDkGdzdziW+hjC8hS5YJWc/I2ax5OB1Bt
        TzN8W3FxlG99cwIDDtDkcIzzfdnH4kxpsqEBDDhAkwOc6rwtJzCMcB8XpjgYZlwpM4KVlfGZhaHKdE2X
        E5gOxXRNbmEu+rK91FDHrrWeEEfqtGgCDPcuVZhdmGWvs/PiTG4P2xJ8yBnByssT7MCQfha5gE2OjLAn
        V7rEkX9NezazxOFd4khfHtofLAQw3Q0e58NghBSGopxm2N7edo4XzgVsNJmMBfbh7TibykyKI3M5aB5g
        V9svG5HkvJYk0GigpQDzjaMJLASw8Lch4dReGODXs/OL4oo9LzA523Kdn5kJsPDHYf/F3TviqvopW5XL
        PSyvEBhG75nzObMISCpMW5HBEK7RcqVZR9nAVKkQ63ZWskMHq4NjawILMw3vu6UjxZcdYEY//eDXsKVn
        saG038N3bDD5mgou7pIM3/RlTNNAQKNZREA4pm3/xFf+Op8CsLxvGRGet3Q/gXTXCA4jDtizxgpWv3U1
        a65Zy/flQdEy40tNWooEV9WdYtXJQb6/O9XDah/0sh2DNwNU36xgces4lmA3Gv/OuvCHtg0UnmEyEEeS
        k8CoqtP3tPcpQpWHrZx38EFTfUDVGGqtZ4OnmnJmnU8Aa9i+QQ0kp8BCWHobW66Lo/gZwVQANFxTLUkX
        OAI6vq3S6cHVBIYZVqgVlPcuhV6apnuYDEdANCinJ30NFsLDKf69gwrx2UoKRjgEp5p1ccHCxf187u8U
        MYABZeLRMJvJZAIkDFVhOCuYBxYVB63oYDKQDkkVwe1bb7mHRQBDUdGKAhYGwlN/ZmyMzzDf8ON73ZpG
        5XKNioVKDhZGKkY065R4EYqCFhlMBiomkq5CwfmieYGVEkhXIWadD5oV7F9E0hUHzhUtD0wGWg5IquLO
        OFMB2HIGWroY+w1AwFGvUMhavQAAAABJRU5ErkJggg==
</value>
  </data>
</root>